apiVersion: hive.openshift.io/v1
kind: SelectorSyncSet
metadata:
  labels:
    managed.openshift.io/gitHash: ${IMAGE_TAG}
    managed.openshift.io/gitRepoName: ${REPO_NAME}
    managed.openshift.io/osd: 'true'
  name: hypershift-validating-webhook-patching
spec:
  clusterDeploymentSelector:
    matchLabels:
      api.openshift.com/managed: 'true'
    matchExpressions:
    - key: ext-hypershift.openshift.io/cluster-type
      operator: In
      values:
      - service-cluster
    - key: api.openshift.com/fedramp
      operator: NotIn
      values:
      - 'true'
  resourceApplyMode: Sync
  resources:
  - apiVersion: policy.open-cluster-management.io/v1
    kind: Policy
    metadata:
      annotations:
        policy.open-cluster-management.io/categories: CM Configuration Management
        policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
        policy.open-cluster-management.io/standards: NIST SP 800-53
      name: validating-webhook-patching
      namespace: openshift-acm-policies
    spec:
      disabled: false
      policy-templates:
      - objectDefinition:
          apiVersion: policy.open-cluster-management.io/v1
          kind: ConfigurationPolicy
          metadata:
            name: validating-webhook-patching
          spec:
            evaluationInterval:
              compliant: 2h
              noncompliant: 45s
            namespaceSelector:
              matchLabels:
                hypershift.openshift.io/hosted-control-plane: 'true'
            object-templates:
            - complianceType: mustonlyhave
              metadataComplianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ServiceAccount
                metadata:
                  name: validating-webhook-patching-sa
            - complianceType: mustonlyhave
              metadataComplianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: Role
                metadata:
                  name: validating-webhook-patching-role
                rules:
                - apiGroups:
                  - ''
                  resources:
                  - secrets
                  - configmaps
                  verbs:
                  - get
            - complianceType: mustonlyhave
              metadataComplianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding
                metadata:
                  name: validating-webhook-patching-rolebinding
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: Role
                  name: validating-webhook-patching-role
                subjects:
                - kind: ServiceAccount
                  name: validating-webhook-patching-sa
            - complianceType: mustonlyhave
              metadataComplianceType: musthave
              objectDefinition:
                apiVersion: batch/v1
                kind: CronJob
                metadata:
                  name: validating-webhook-patching-job
                spec:
                  jobTemplate:
                    spec:
                      template:
                        spec:
                          containers:
                          - args:
                            - /bin/bash
                            - -c
                            - "set -e\nset -o nounset\nset -o pipefail\n\nif [[ -z\
                              \ \"${JOB_NS}\" ]]; then\n   echo \"Missing namespace\
                              \ JOB_NS var\"\n   exit 1\nfi\n\n# Get that CA\nCABUNDLE=$(oc\
                              \ get configmap webhook-cert -o json --ignore-not-found\
                              \ | jq -r '.data.\"service-ca.crt\"' | base64 -w 0)\n\
                              \nif [[ -z $CABUNDLE ]]; then\n  echo \"CA bundle not\
                              \ found, might be due to the MCVW has not been deployed,\
                              \ skipping...\"\n  exit 0\nfi\n\n# Get that kubeconfig\n\
                              TMPDIR=$(mktemp -d)\noc get secret service-network-admin-kubeconfig\
                              \ -o json --ignore-not-found | jq -r '.data.kubeconfig'\
                              \ | base64 -d >> ${TMPDIR}/kubeconfig\n\n# patch the\
                              \ CA\nfor WEBHOOK in namespace regular-user scc techpreviewnoupgrade\n\
                              do\n  oc patch --kubeconfig ${TMPDIR}/kubeconfig validatingwebhookconfiguration\
                              \ sre-${WEBHOOK}-validation --type=json -p \"[{'op':'replace',\
                              \ 'path': '/webhooks/0/clientConfig/caBundle', 'value':\
                              \ '${CABUNDLE}'}]\" || true\ndone\n\n# clean up\nrm\
                              \ -f ${TMPDIR}/kubeconfig"
                            env:
                            - name: JOB_NS
                              valueFrom:
                                fieldRef:
                                  fieldPath: metadata.namespace
                            image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
                            name: validating-webhook-patching
                          restartPolicy: Never
                          serviceAccountName: validating-webhook-patching-sa
                  schedule: '*/30 * * * *'
            pruneObjectBehavior: DeleteIfCreated
            remediationAction: enforce
            severity: low
  - apiVersion: apps.open-cluster-management.io/v1
    kind: PlacementRule
    metadata:
      name: placement-validating-webhook-patching
      namespace: openshift-acm-policies
    spec:
      clusterSelector:
        matchExpressions:
        - key: hypershift.open-cluster-management.io/management-cluster
          operator: In
          values:
          - 'true'
  - apiVersion: policy.open-cluster-management.io/v1
    kind: PlacementBinding
    metadata:
      name: binding-validating-webhook-patching
      namespace: openshift-acm-policies
    placementRef:
      apiGroup: apps.open-cluster-management.io
      kind: PlacementRule
      name: placement-validating-webhook-patching
    subjects:
    - apiGroup: policy.open-cluster-management.io
      kind: Policy
      name: validating-webhook-patching
