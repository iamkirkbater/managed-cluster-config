apiVersion: hive.openshift.io/v1
kind: SelectorSyncSet
metadata:
  labels:
    managed.openshift.io/gitHash: ${IMAGE_TAG}
    managed.openshift.io/gitRepoName: ${REPO_NAME}
    managed.openshift.io/osd: 'true'
  name: osd-token-refresher
spec:
  clusterDeploymentSelector:
    matchLabels:
      api.openshift.com/managed: 'true'
    matchExpressions:
    - key: api.openshift.com/fedramp
      operator: NotIn
      values:
      - 'true'
  resourceApplyMode: Sync
  resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: authentication-proxy
        app.kubernetes.io/name: token-refresher
        app.kubernetes.io/version: master-2021-02-24-1e01b9c
      name: token-refresher
      namespace: openshift-monitoring
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: authentication-proxy
          app.kubernetes.io/name: token-refresher
      template:
        metadata:
          labels:
            app.kubernetes.io/component: authentication-proxy
            app.kubernetes.io/name: token-refresher
            app.kubernetes.io/version: master-2021-02-24-1e01b9c
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
                weight: 1
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/infra
            operator: Exists
          volumes:
          - configMap:
              defaultMode: 420
              items:
              - key: ca-bundle.crt
                path: ca-certificates.crt
              name: token-refresher-trusted-ca-bundle
            name: token-refresher-trusted-ca-bundle
          containers:
          - args:
            - --oidc.audience=observatorium-telemeter
            - --oidc.client-id=$(CLIENT_ID)
            - --oidc.client-secret=$(CLIENT_SECRET)
            - --oidc.issuer-url=$(ISSUER_URL)
            - --url=$(RECEIVER_URL)
            env:
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: observatorium-credentials
                  key: client-id
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: observatorium-credentials
                  key: client-secret
            - name: RECEIVER_URL
              valueFrom:
                secretKeyRef:
                  name: observatorium-credentials
                  key: receiver-url
            - name: ISSUER_URL
              value: https://sso.redhat.com/auth/realms/redhat-external
            image: quay.io/observatorium/token-refresher@sha256:6ce9b80cd1d907cb6c9ed2a18612f386f7503257772d1d88155a4a2e6773fd00
            name: token-refresher
            ports:
            - containerPort: 8080
              name: http
            volumeMounts:
            - mountPath: /etc/ssl/certs/
              name: token-refresher-trusted-ca-bundle
              readOnly: true
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/component: authentication-proxy
        app.kubernetes.io/name: token-refresher
        app.kubernetes.io/version: master-2021-02-24-1e01b9c
      name: token-refresher
      namespace: openshift-monitoring
    spec:
      ports:
      - name: http
        port: 80
        targetPort: 8080
      selector:
        app.kubernetes.io/component: authentication-proxy
        app.kubernetes.io/name: token-refresher
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app.kubernetes.io/component: authentication-proxy
        app.kubernetes.io/name: token-refresher
      name: token-refresher
      namespace: openshift-monitoring
    spec:
      podSelector:
        matchLabels:
          app.kubernetes.io/component: authentication-proxy
          app.kubernetes.io/name: token-refresher
      policyTypes:
      - Ingress
      ingress:
      - from:
        - podSelector:
            matchLabels:
              prometheus: k8s
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      namespace: openshift-monitoring
      name: token-refresher-trusted-ca-bundle
      labels:
        config.openshift.io/inject-trusted-cabundle: 'true'
